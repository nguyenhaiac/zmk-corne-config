/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB     &kp Q  &kp W  &kp F     &kp P     &kp G    &kp J      &kp L      &kp U      &kp Y    &kp SEMI  &kp BSLH
&mo 2       &kp A  &kp R  &kp S     &kp T     &kp D    &kp H      &kp N      &kp E      &kp I    &kp O     &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C     &kp V     &kp B    &kp K      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT RET
                          &kp LALT  &kp LGUI  &mo 1    &kp SPACE  &kp LCTRL  &mo 2
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp TILDE  &kp PRCNT  &kp AMPS  &kp QMARK   &kp PLUS    &kp AT      &kp DLLR       &kp UNDER        &kp LBKT      &kp RBKT  &kp EXCL   &kp HASH
&kp GRAVE  &kp FSLH   &kp LPAR  &kp EQUAL   &kp N0      &kp LBRC    &kp RBRC       &kp N1           &kp STAR      &kp RPAR  &kp MINUS  &kp CARET
&studio_unlock    &kp N6     &kp N7    &kp N8      &kp N9      &kp PIPE    &kp BACKSLASH  &kp N2           &kp N3        &kp N4    &kp N5     &trans
                                &kp C_PREV  &kp C_NEXT  &trans      &kp C_MUTE     &kp C_VOLUME_UP  &kp C_VOL_DN
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp INS    &kp PSCRN  &kp LC(PG_UP)  &kp LC(PG_DN)  &trans        &kp PG_UP  &kp LC(LEFT_ARROW)  &kp UP    &kp LC(RIGHT_ARROW)  &trans    &trans
&trans  &kp LALT   &kp GUI    &kp LSHFT      &kp LCTRL      &kp ESC       &kp PG_DN  &kp LEFT            &kp DOWN  &kp RIGHT            &kp BSPC  &kp DEL
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)      &kp LC(V)      &trans        &trans     &trans              &trans    &trans               &trans    &trans
                              &kp BACKSPACE  &kp DELETE     &kp RETURN    &kp RET    &trans              &trans
            >;
        };

        adjust {
            label = "adjust";
            bindings = <
&bt BT_CLR         &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans         &trans      &trans  &trans  &trans
&ext_power EP_TOG  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans          &trans  &kp K_PREV     &kp K_NEXT  &trans  &trans  &trans
&trans             &trans             &trans             &trans        &trans        &trans          &trans  &trans         &trans      &trans  &trans  &to 0
                                                         &trans        &kp LEFT_ALT  &trans          &trans  &kp RIGHT_WIN  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&kp N0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &kp F5         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &kp J         &kp I         &kp M           &trans         &trans         &trans
            >;
        };
    };
};
